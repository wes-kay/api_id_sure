basePath: /v1
definitions:
  model.Account:
    properties:
      email:
        type: string
      email_validated:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      phone:
        type: integer
      role:
        type: integer
      status:
        type: integer
      temp:
        type: boolean
    required:
    - email
    - email_validated
    - id
    - name
    - phone
    - role
    - status
    type: object
  model.Certficate:
    properties:
      accessed:
        type: integer
      accountID:
        type: integer
      activated:
        type: boolean
      completed:
        type: boolean
      courseID:
        type: integer
      created:
        type: string
      dateOfBirth:
        type: string
      experience:
        type: integer
      id:
        type: integer
      issued:
        type: string
      kin:
        type: string
      licence:
        type: string
      nationality:
        type: string
      passport:
        type: string
      rank:
        type: string
      shipExpereince:
        type: string
      type:
        type: integer
      uid:
        type: string
      verified:
        type: boolean
    type: object
  model.Course:
    properties:
      additional_description:
        type: string
      address:
        type: string
      certificate_name:
        type: string
      country:
        type: string
      course_id:
        type: integer
      course_name:
        type: string
      created:
        type: string
      description:
        type: string
      expire:
        type: integer
      id:
        type: integer
      image:
        type: string
    required:
    - address
    - certificate_name
    - country
    - course_id
    - course_name
    - description
    - expire
    type: object
  model.CourseCertificate:
    properties:
      account:
        $ref: '#/definitions/model.Account'
      certificate:
        $ref: '#/definitions/model.Certficate'
      course:
        $ref: '#/definitions/model.Course'
    type: object
  model.SignInResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: io.labs.development@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  title: Digital ID
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: email_validated
        type: boolean
      - in: formData
        name: id
        type: integer
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignInResponse'
      summary: Sign Into Account
      tags:
      - account
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - in: query
        name: email
        required: true
        type: string
      - in: query
        name: password
        required: true
        type: string
      - in: query
        name: passwordconfirm
        required: true
        type: string
      - in: query
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates an account on the service
      tags:
      - account
  /v1/signup/welcome/{uid}:
    post:
      consumes:
      - application/json
      parameters:
      - description: uid from email
        in: query
        name: string
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Verifies an email with a UID sent to the account email
      tags:
      - verify
  /v1/view/certificate/{uid}:
    get:
      consumes:
      - application/json
      description: Loads certificate from uid
      parameters:
      - description: uid from url
        in: query
        name: string
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CourseCertificate'
      tags:
      - certificate
swagger: "2.0"
