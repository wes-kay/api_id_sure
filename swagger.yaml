basePath: /v1
definitions:
  model.Account:
    properties:
      email:
        type: string
      email_validated:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      phone:
        type: integer
      role:
        type: integer
      status:
        type: integer
      temp:
        type: boolean
    required:
    - email
    - email_validated
    - id
    - name
    - phone
    - role
    - status
    type: object
  model.Certificate:
    properties:
      accessed:
        type: integer
      accountID:
        type: integer
      activated:
        type: boolean
      completed:
        type: boolean
      courseID:
        type: integer
      created:
        type: string
      dateOfBirth:
        type: string
      experience:
        type: integer
      id:
        type: integer
      issued:
        type: string
      kin:
        type: string
      licence:
        type: string
      nationality:
        type: string
      passport:
        type: string
      rank:
        type: string
      shipExpereince:
        type: string
      type:
        type: integer
      uid:
        type: string
      verified:
        type: boolean
    type: object
  model.Course:
    properties:
      additional_description:
        type: string
      address:
        type: string
      certificate_name:
        type: string
      country:
        type: string
      course_id:
        type: integer
      course_name:
        type: string
      created:
        type: string
      description:
        type: string
      expire:
        type: integer
      id:
        type: integer
      image:
        type: string
    required:
    - address
    - certificate_name
    - country
    - course_id
    - course_name
    - description
    - expire
    type: object
  model.CourseCertificate:
    properties:
      account:
        $ref: '#/definitions/model.Account'
      certificate:
        $ref: '#/definitions/model.Certificate'
      course:
        $ref: '#/definitions/model.Course'
    type: object
  model.SignInResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: io.labs.development@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  title: Digital ID
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: email_validated
        type: boolean
      - in: formData
        name: id
        type: integer
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignInResponse'
      summary: Sign Into Account
      tags:
      - account
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: passwordconfirm
        required: true
        type: string
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates an account on the service
      tags:
      - account
  /v1/account:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CourseCertificate'
      summary: Get's account info using the session token
      tags:
      - account
  /v1/account/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: account id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes an account by ID
      tags:
      - account
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: account id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
      summary: Gets an account by id
      tags:
      - account
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: account id
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: email_validated
        required: true
        type: boolean
      - in: formData
        name: id
        required: true
        type: integer
      - in: formData
        name: image
        type: string
      - in: formData
        name: name
        required: true
        type: string
      - in: formData
        name: phone
        required: true
        type: integer
      - in: formData
        name: role
        required: true
        type: integer
      - in: formData
        name: status
        required: true
        type: integer
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Updates an account by ID
      tags:
      - account
  /v1/admin/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Account'
            type: array
      summary: Gets all accounts for Admin
      tags:
      - Admin
  /v1/certificate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates a certificate by session ID
      tags:
      - certificate
  /v1/certificate/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Certificate ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes a certificate by ID
      tags:
      - certificate
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Certificate ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Certificate'
      summary: Gets certificate by ID
      tags:
      - certificate
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Certificate ID
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: accessed
        type: integer
      - in: formData
        name: accountID
        type: integer
      - in: formData
        name: activated
        type: boolean
      - in: formData
        name: completed
        type: boolean
      - in: formData
        name: courseID
        type: integer
      - in: formData
        name: created
        type: string
      - in: formData
        name: dateOfBirth
        type: string
      - in: formData
        name: experience
        type: integer
      - in: formData
        name: id
        type: integer
      - in: formData
        name: issued
        type: string
      - in: formData
        name: kin
        type: string
      - in: formData
        name: licence
        type: string
      - in: formData
        name: nationality
        type: string
      - in: formData
        name: passport
        type: string
      - in: formData
        name: rank
        type: string
      - in: formData
        name: shipExpereince
        type: string
      - in: formData
        name: type
        type: integer
      - in: formData
        name: uid
        type: string
      - in: formData
        name: verified
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Updates a certificate by ID
      tags:
      - certificate
  /v1/certificates/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Account ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Certificate'
            type: array
      summary: Gets all certificate by account ID
      tags:
      - certificate
  /v1/certificates/course/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Account ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Certificate'
            type: array
      summary: Gets all certificate by course ID
      tags:
      - certificate
  /v1/course/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Course ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete a course by ID
      tags:
      - course
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Course ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Course'
      summary: Gets a course by ID
      tags:
      - course
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates a new course using session ID
      tags:
      - course
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Course ID
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: additional_description
        type: string
      - in: formData
        name: address
        required: true
        type: string
      - in: formData
        name: certificate_name
        required: true
        type: string
      - in: formData
        name: country
        required: true
        type: string
      - in: formData
        name: course_id
        required: true
        type: integer
      - in: formData
        name: course_name
        required: true
        type: string
      - in: formData
        name: created
        type: string
      - in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: expire
        required: true
        type: integer
      - in: formData
        name: id
        type: integer
      - in: formData
        name: image
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update a course by ID
      tags:
      - course
  /v1/courses/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: Course ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Course'
            type: array
      summary: Returns all courses under account
      tags:
      - course
  /v1/signup/welcome/{uid}:
    post:
      consumes:
      - application/json
      parameters:
      - description: uid from email
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Verifies an email with a UID sent to the account email
      tags:
      - verify
  /v1/view/certificate/{uid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: uid from url
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CourseCertificate'
      summary: Loads certificate from uid
      tags:
      - certificate
swagger: "2.0"
