// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "io.labs.development@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/signin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Sign Into Account",
                "parameters": [
                    {
                        "maxLength": 320,
                        "minLength": 4,
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "email_validated",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "maxLength": 156,
                        "minLength": 8,
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "role",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "temp",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignInResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Creates an account on the service",
                "parameters": [
                    {
                        "maxLength": 320,
                        "minLength": 4,
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 156,
                        "minLength": 8,
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 156,
                        "minLength": 8,
                        "type": "string",
                        "name": "passwordconfirm",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "temp",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/account": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get's account info using the session token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseCertificate"
                        }
                    }
                }
            }
        },
        "/v1/account/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Gets an account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Updates an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Deletes an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/admin/account/{id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Sets a user role from the Admin dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/admin/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Gets all accounts for Admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/certificate": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Gets all certificate for Admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Certificate"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/course/{id}/analytics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Gets all courses for Admin analytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MontlyCourseAnalytics"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/courses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Gets all courses for Admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/v1/certificate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Creates a certificate by session ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/certificate/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Gets certificate by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Certificate"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Updates a certificate by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "activated",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "issued",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Deletes a certificate by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/certificates/course/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Gets all certificate by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Certificate"
                            }
                        }
                    }
                }
            }
        },
        "/v1/certificates/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Gets all certificate by account ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Certificate"
                            }
                        }
                    }
                }
            }
        },
        "/v1/course/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Gets a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Update a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "additional_description",
                        "in": "formData"
                    },
                    {
                        "maxLength": 100,
                        "minLength": 3,
                        "type": "string",
                        "name": "certificate_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "minLength": 3,
                        "type": "string",
                        "name": "course_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "created",
                        "in": "formData"
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "expire",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "fk_course_category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Creates a new course using session ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "additional_description",
                        "in": "formData"
                    },
                    {
                        "maxLength": 100,
                        "minLength": 3,
                        "type": "string",
                        "name": "certificate_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "minLength": 3,
                        "type": "string",
                        "name": "course_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "created",
                        "in": "formData"
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "expire",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "fk_course_category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Delete a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/courses/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Returns all courses under account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/v1/download/certificate/{uid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Loads certificate from uid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid from url",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseCertificate"
                        }
                    }
                }
            }
        },
        "/v1/lookup/account-role": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lookup table"
                ],
                "summary": "Gets account roles for form dropdown",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.AccountRole"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lookup/account-status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lookup table"
                ],
                "summary": "Gets account status for form dropdown",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.AccountStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lookup/certificate-type": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lookup table"
                ],
                "summary": "Gets certificate types for form dropdown",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.CertificateType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lookup/course-categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lookup table"
                ],
                "summary": "Gets course category for form dropdown",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.CourseCategory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/profile/reject": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Updates an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/profile/validate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Updates an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/profile/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Gets an account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AccountProfile"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Updates an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "country",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "date_of_birth",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maximum": 255,
                        "type": "integer",
                        "name": "experience",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "kin",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "licence",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "nationality",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "passport_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 0,
                        "type": "string",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "rank",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maximum": 255,
                        "type": "integer",
                        "name": "ship_experience",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/signup/{uid}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "verify"
                ],
                "summary": "Verifies an email with a UID sent to the account email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid from email",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/view/certificate/{uid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificate"
                ],
                "summary": "Loads certificate from uid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid from url",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseCertificate"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_validated": {
                    "type": "boolean"
                },
                "experience": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kin": {
                    "type": "string"
                },
                "licence": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "nationality": {
                    "type": "string"
                },
                "passport": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_completed": {
                    "type": "boolean"
                },
                "profile_image": {
                    "type": "string"
                },
                "profile_validated": {
                    "type": "boolean"
                },
                "rank": {
                    "type": "string"
                },
                "role": {
                    "type": "integer",
                    "minimum": 0
                },
                "ship_experience": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer",
                    "minimum": 0
                },
                "temp": {
                    "type": "boolean"
                }
            }
        },
        "model.AccountProfile": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "experience": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kin": {
                    "type": "string"
                },
                "licence": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "passport_image_one": {
                    "type": "string"
                },
                "passport_image_two": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_completed": {
                    "type": "boolean"
                },
                "profile_image": {
                    "type": "string"
                },
                "profile_validated": {
                    "type": "boolean"
                },
                "rank": {
                    "type": "string"
                },
                "ship_experience": {
                    "type": "integer"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "model.AccountRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.AccountStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Certificate": {
            "type": "object",
            "properties": {
                "accessed": {
                    "type": "integer"
                },
                "accountID": {
                    "type": "integer"
                },
                "activated": {
                    "type": "boolean"
                },
                "courseID": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "issued": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "typeID": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "model.CertificateType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Course": {
            "type": "object",
            "required": [
                "certificate_name",
                "course_name",
                "description",
                "expire",
                "fk_course_category_id"
            ],
            "properties": {
                "additional_description": {
                    "type": "string",
                    "maxLength": 500
                },
                "certificate_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "course_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "expire": {
                    "type": "integer",
                    "minimum": 0
                },
                "fk_course_category_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.CourseCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CourseCertificate": {
            "type": "object",
            "properties": {
                "certificate": {
                    "$ref": "#/definitions/model.Certificate"
                },
                "course": {
                    "$ref": "#/definitions/model.Course"
                },
                "providerAccount": {
                    "$ref": "#/definitions/model.Account"
                },
                "userAccount": {
                    "$ref": "#/definitions/model.Account"
                }
            }
        },
        "model.MontlyCourseAnalytics": {
            "type": "object",
            "properties": {
                "edits": {
                    "type": "integer"
                },
                "issued": {
                    "type": "integer"
                },
                "revoked": {
                    "type": "integer"
                },
                "validated": {
                    "type": "integer"
                }
            }
        },
        "model.MultipartFile": {
            "type": "object",
            "properties": {
                "file": {},
                "fileHeader": {
                    "$ref": "#/definitions/multipart.FileHeader"
                }
            }
        },
        "model.SignInResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Digital ID",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
